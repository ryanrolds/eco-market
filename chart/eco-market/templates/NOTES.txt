1. The ECO Market Discord Bot has been deployed to your Kubernetes cluster!

2. Before the bot can function, you need to configure secrets using SOPS:

   Create a secret with your Discord credentials:
   
   kubectl create secret generic {{ include "eco-market.fullname" . }}-secrets \
     --from-literal=discord-token="YOUR_DISCORD_BOT_TOKEN" \
     --from-literal=discord-channel-id="YOUR_DISCORD_CHANNEL_ID"

   Or use SOPS to encrypt and apply your secrets file.

3. Check the bot status:
   
   kubectl get pods -l "app.kubernetes.io/name={{ include "eco-market.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

4. View bot logs:
   
   kubectl logs -f deployment/{{ include "eco-market.fullname" . }}

5. The bot is configured to:
   - Run the {{ .Values.bot.script }} script
   - Connect to ECO server at: {{ .Values.env.ECO_SERVER_URL }}
   {{- if .Values.env.CURRENCY_FILTER }}
   - Filter currencies: {{ .Values.env.CURRENCY_FILTER }}
   {{- end }}

6. Bot Commands (once running):
   - /market - Get current arbitrage report
   - /help - Show available commands

{{- if .Values.ingress.enabled }}

7. Access the bot via ingress:
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
   http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- end }}

For more information about configuring the bot, see the README.md file.